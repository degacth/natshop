// Generated by CoffeeScript 1.9.2
(function() {
  var get_url_by_name, print;

  angular.module("Customer").controller("CustomerBase", function($scope, $location, CUSTOMER_ANONYMOUS_URLS, CUSTOMER_URLS) {
    return angular.extend($scope, {
      get_urls: function() {
        if (this.customer.email) {
          return CUSTOMER_URLS;
        } else {
          return CUSTOMER_ANONYMOUS_URLS;
        }
      },
      get_sidebar: function() {
        return window.ng_config.static_url + "js/app/site/view/customer_menu.html";
      },
      is_active_menu: function(path) {
        if ($location.path() === path) {
          return 'active';
        }
      },
      signup_redirect: get_url_by_name(CUSTOMER_URLS, 'orders').url,
      signin_redirect: get_url_by_name(CUSTOMER_URLS, 'orders').url
    });
  }).controller("Signup", function($scope, $location, CustomerModel, CUSTOMER_URLS) {
    return angular.extend($scope, {
      info: {},
      check_form: function() {
        return this.signup_form.$valid && this.info.password === this.repeat_password;
      },
      save: function() {
        var customer;
        if (!this.check_form()) {
          return;
        }
        customer = new CustomerModel(this.info);
        return customer.$save().then(function(data) {
          angular.extend($scope.customer, data);
          if ($scope.signup_redirect) {
            return $location.path($scope.signup_redirect);
          }
        });
      }
    });
  }).controller("Logout", function($scope, $location, LoginResource, CUSTOMER_ANONYMOUS_URLS) {
    return $scope.logout = function() {
      return (new LoginResource()).$delete().then(function() {
        $scope.customer.email = null;
        return $location.path(get_url_by_name(CUSTOMER_ANONYMOUS_URLS, 'signin').url);
      });
    };
  }).controller("Signin", function($scope, $location, LoginResource, CUSTOMER_URLS, CUSTOMER_ANONYMOUS_URLS) {
    return angular.extend($scope, {
      signin: function() {
        return (new LoginResource(this.info)).$save().then(function(data) {
          angular.extend($scope.customer, data);
          if ($scope.signin_redirect) {
            return $location.path($scope.signin_redirect);
          }
        });
      },
      get_anonymous_url_by_name: _.partial(get_url_by_name, CUSTOMER_ANONYMOUS_URLS)
    });
  }).controller("ForgetPassword", function($scope, ForgetResource) {
    return $scope.forget_resource = new ForgetResource();
  }).controller("Orders", function($scope, Order) {
    return angular.extend($scope, {
      orders: Order.query(),
      show_items: function(order) {
        return order.show_items = !order.show_items;
      }
    });
  });

  get_url_by_name = function(collection, name) {
    return _.find(collection, function(url) {
      return url.name === name;
    });
  };

  print = console.log.bind(console);

}).call(this);

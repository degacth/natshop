// Generated by CoffeeScript 1.10.0
(function() {
  angular.module('ParsersApp', ['xml', 'ngResource']).config(function(x2jsProvider, $httpProvider) {
    x2jsProvider.config = {
      escapeMode: true
    };
    return $httpProvider.interceptors.push('xmlHttpInterceptor');
  }).factory('getCatalogTree', function(CatalogModel) {
    return function(catalog_list) {
      var get_model, root, set_children;
      get_model = function(xml_model) {
        return new CatalogModel({
          id: xml_model._id,
          title: xml_model.__text,
          parent_id: xml_model._parentId
        });
      };
      set_children = function(catalogs, parent) {
        var filtered;
        if (_.isEmpty(catalogs)) {
          return;
        }
        parent.children = [];
        filtered = _.filter(catalogs, function(item) {
          if (item._parentId === parent.id) {
            return parent.children.push(get_model(item)) && false;
          } else {
            return true;
          }
        });
        if (_.isEmpty(parent.children)) {
          return;
        }
        return _.map(parent.children, function(item) {
          return set_children(filtered, item);
        });
      };
      set_children(catalog_list, root = {});
      return root;
    };
  }).factory('CatalogModel', function($resource) {
    return $resource("/url/:id");
  }).directive('catalogTree', function() {
    return {
      templateUrl: '/static/parsers/js/views/local_catalog.html'
    };
  }).factory('catalogTreeControllerMixin', function() {
    return function($scope) {
      return _.extend($scope, {
        catalog_selected: function(catalog) {
          return $scope.current_catalog = catalog;
        },
        is_active_catalog: function(catalog) {
          if (catalog === $scope.current_catalog) {
            return "uk-active";
          } else {
            return "";
          }
        }
      });
    };
  });

}).call(this);
